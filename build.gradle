import org.jetbrains.kotlin.gradle.dsl.JvmTarget

plugins {
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.jetbrains.kotlin.jvm' version '1.9.0'
	id 'org.jetbrains.kotlin.kapt' version '1.9.0'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.0'
}

group = 'com.tramalho'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.VERSION_20
}

kotlin {
	compilerOptions {
		jvmTarget.set(JvmTarget.JVM_20)
		freeCompilerArgs.add("-Xjsr305=strict")
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.jetbrains.kotlin:kotlin-reflect'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-json'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0"

	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'

	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
	kapt("org.mapstruct:mapstruct-processor:1.5.5.Final")

	implementation 'com.mysql:mysql-connector-j'

	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	testImplementation "org.mockito.kotlin:mockito-kotlin:5+"

	testImplementation "io.rest-assured:rest-assured"
	testImplementation "io.rest-assured:kotlin-extensions"

	testImplementation "org.testcontainers:mysql"
}

tasks.named('test') {
	useJUnitPlatform()
}
